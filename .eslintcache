[{"C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\index.js":"1","C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\App.js":"2","C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\reportWebVitals.js":"3","C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\login\\index.js":"4","C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\Post\\index.js":"5","C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\Feed\\index.js":"6","C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\Login\\index.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":2479,"mtime":1612358894967,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":572,"mtime":1612270449029,"results":"12","hashOfConfig":"9"},{"size":385,"mtime":1612348075867,"results":"13","hashOfConfig":"9"},{"size":886,"mtime":1612352881888,"results":"14","hashOfConfig":"9"},{"size":531,"mtime":1612359385200,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"qci8p7",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\index.js",[],["33","34"],"C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\App.js",["35"],"import './App.css';\nimport { useEffect, useState } from 'react';\nimport LoginBox from './Login/index';\nimport Feed from './Feed/index';\nimport Post from './Post/index';\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [currentUser, setCurrentUser] = useState({});\n  const [posts, setPosts] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userLoaded, setUserLoaded] = useState(false);\n  const [postVal, setPostVal] = useState(\"\");\n\n  useEffect(() => {\n    postRequest()\n  });\n\n  const postChange = (event) => {\n    setPostVal(event.target.value)\n  };\n\n  const postRequest = async () => {\n    const response = await fetch(\"http://localhost:5000/posts\")\n    const data = await response.json();\n    setPosts(data)\n    setIsLoaded(true)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (event.target.name === 'login') {\n    const loginObj = {name: user, password: pass};\n    fetchUser(loginObj);\n    setUser(\"\");\n    setPass(\"\");\n    } else {\n      console.log(\"else clause\")\n      savePost(event);\n      setPostVal(\"\");\n    }\n  };\n\n  const onChange = (event) => {\n    if (event.target.name === 'userName') {\n      setUser(event.target.value);\n    } else {\n      setPass(event.target.value);\n    };\n  };\n\n  const fetchUser = async (loginObj) => {\n    try {\n      const response = await fetch(`http://localhost:5000/users/${loginObj.name}`);\n      const data = await response.json();\n      if (loginObj.password === data[0].password) {\n        setCurrentUser({name: data[0].name, id: data[0]._id});\n        setUserLoaded(true);\n      }\n    } catch (error) {\n      \n    }\n    \n  }\n\n  const savePost = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/posts/${currentUser.id}`,\n      {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({content: postVal})\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.log(\"I didn't post\")\n    }\n  }\n\n  let isDisabled = user === \"\" && pass ===\"\";\n  return (\n    <div className=\"App\">\n      <LoginBox handleSubmit={handleSubmit} onChange={onChange} userVal={user} passVal={pass} isDisabled={isDisabled}></LoginBox>\n      <Post onSubmit={handleSubmit} postVal={postVal} onChange={postChange}/>\n      <Feed isLoaded={isLoaded} content={posts}/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\reportWebVitals.js",[],"C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\login\\index.js",[],["36","37"],"C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\Post\\index.js",[],"C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\Feed\\index.js",[],"C:\\Users\\wafro\\OneDrive\\Documents\\coding\\codeNation\\week8day1\\react-rest-api\\src\\Login\\index.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":13,"column":10,"nodeType":"44","messageId":"45","endLine":13,"endColumn":20},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'userLoaded' is assigned a value but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]